function heapsort(a, prvi, zadnji):
    nakopici(a, prvi, zadnji);
    while prvi < zadnji:
        swap(a[prvi], a[zadnji]);
        zadnji--;
        pogrezni(a, prvi, prvi, zadnji);

function nakopici(a, prvi, zadnji):
    zacetek = (prvi + zadnji) / 2 - 1
    while zacetek >= prvi:
        pogrezni(a, prvi, zacetek, zadnji - 1)
        zacetek--;

function pogrezni(a, prvi, koren, zadnji):
    odmik = koren - prvi;
    while koren + odmik < zadnji: /* Dokler ima koren vsaj enega otroka */
        /* Ugotovimo, s katerim izmed otrok moramo zamenjati koren 
        (ce sploh!) in njegov index shranimo v spremenljivko zam */ 
        if zam != koren:
            swap(a[zam], a[koren]);
            koren = zam;
            odmik = koren - prvi;
        else: return
